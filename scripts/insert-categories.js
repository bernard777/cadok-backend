require('dotenv').config({ path: '.env.test' });
const mongoose = require('mongoose');
const Category = require('../models/Category');

// 20 cat√©gories d'objets r√©ellement √©changeables - EN FRAN√áAIS
const categories = [
  {
    name: '√âlectronique',
    fields: ['marque', 'mod√®le', '√©tat', 'stockage', 'couleur', 'garantie', 'accessoires']
  },
  {
    name: 'V√™tements & Mode',
    fields: ['taille', 'marque', 'couleur', 'mati√®re', '√©tat', 'genre', 'saison']
  },
  {
    name: 'Livres & BD',
    fields: ['auteur', '√©diteur', '√©tat', 'langue', 'genre', '√©dition', 'isbn']
  },
  {
    name: 'Sports & Loisirs',
    fields: ['sport', 'marque', 'taille', '√©tat', 'mati√®re', 'niveau', 'accessoires']
  },
  {
    name: 'Maison & D√©coration',
    fields: ['pi√®ce', 'mati√®re', '√©tat', 'couleur', 'dimensions', 'style', 'marque']
  },
  {
    name: 'Jouets & Jeux',
    fields: ['tranche_√¢ge', 'marque', '√©tat', 'type', 'mati√®re', 'joueurs', '√©ducatif']
  },
  {
    name: 'Instruments de Musique',
    fields: ['instrument', 'marque', '√©tat', 'niveau', 'accessoires', 'vintage', '√©tui']
  },
  {
    name: 'V√©los & Trottinettes',
    fields: ['type', 'marque', '√©tat', 'taille', 'vitesses', '√©lectrique', 'accessoires']
  },
  {
    name: 'Beaut√© & Parfums',
    fields: ['marque', 'type', 'contenance', 'neuf_scell√©', '√©tat', 'genre', 'parfum']
  },
  {
    name: 'Bijoux & Montres',
    fields: ['type', 'mati√®re', 'marque', '√©tat', 'taille', 'style', 'authentique']
  },
  {
    name: 'Art & Objets de Collection',
    fields: ['type', '√©poque', '√©tat', 'dimensions', 'sign√©', 'authentique', 'raret√©']
  },
  {
    name: 'Jeux Vid√©o & Consoles',
    fields: ['plateforme', '√©tat', 'genre', 'langue', 'complet', 'ann√©e', 'multijoueur']
  },
  {
    name: 'DVD & Blu-ray',
    fields: ['format', 'genre', '√©tat', 'langue', 'sous_titres', 'ann√©e', '√©dition']
  },
  {
    name: '√âlectrom√©nager',
    fields: ['type', 'marque', '√©tat', 'capacit√©', 'puissance', 'garantie', 'classe_√©nergie']
  },
  {
    name: 'Pu√©riculture & B√©b√©',
    fields: ['type', 'marque', '√©tat', '√¢ge_min', '√¢ge_max', 's√©curit√©', '√©volutif']
  },
  {
    name: 'Jardin & Plein Air',
    fields: ['type', 'mati√®re', '√©tat', 'dimensions', 'saison', 'marque', 'entretien']
  },
  {
    name: 'Bricolage & Outillage',
    fields: ['type', 'marque', '√©tat', '√©lectrique', 'professionnel', 'accessoires', 'garantie']
  },
  {
    name: 'Cuisine & Arts de la Table',
    fields: ['type', 'mati√®re', 'marque', '√©tat', 'capacit√©', 'lave_vaisselle', 'set']
  },
  {
    name: 'Bagagerie & Maroquinerie',
    fields: ['type', 'marque', 'mati√®re', 'couleur', '√©tat', 'dimensions', 'authentique']
  },
  {
    name: 'Mat√©riel Informatique',
    fields: ['type', 'marque', 'mod√®le', '√©tat', 'compatibilit√©', 'garantie', 'accessoires']
  }
];

async function insertCategories() {
  try {
    console.log('üîó Connexion √† MongoDB...');
    await mongoose.connect(process.env.MONGODB_URI, {
      useNewUrlParser: true,
      useUnifiedTopology: true
    });
    console.log('‚úÖ Connect√© √† MongoDB');

    console.log('üóëÔ∏è Suppression des anciennes cat√©gories...');
    await Category.deleteMany({});
    console.log('‚úÖ Anciennes cat√©gories supprim√©es');

    console.log('üì¶ Insertion des nouvelles cat√©gories...');
    
    for (let i = 0; i < categories.length; i++) {
      const categoryData = categories[i];
      const category = new Category(categoryData);
      
      try {
        await category.save();
        console.log(`‚úÖ ${i + 1}/20 - ${categoryData.name} cr√©√©e avec ${categoryData.fields.length} champs`);
      } catch (error) {
        console.error(`‚ùå Erreur pour ${categoryData.name}:`, error.message);
      }
    }

    console.log('\nüéâ TOUTES LES CAT√âGORIES CR√â√âES !');
    console.log('=' .repeat(50));
    
    // V√©rification
    const totalCategories = await Category.countDocuments();
    console.log(`üìä Total en base : ${totalCategories} cat√©gories`);
    
    // Afficher quelques exemples
    const sampleCategories = await Category.find().limit(3);
    console.log('\nüìã Exemples de cat√©gories cr√©√©es :');
    sampleCategories.forEach(cat => {
      console.log(`‚Ä¢ ${cat.name}: [${cat.fields.join(', ')}]`);
    });

    console.log('\n‚úÖ Script termin√© avec succ√®s !');
    
  } catch (error) {
    console.error('‚ùå Erreur fatale:', error);
  } finally {
    await mongoose.connection.close();
    console.log('üîå Connexion ferm√©e');
    process.exit(0);
  }
}

// Ex√©cuter le script
insertCategories();
