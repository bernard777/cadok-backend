/**
 * CONVERTISSEUR IMAGE BASE64 POUR EMAILS
 * ======================================
 * 
 * Convertit l'adaptive-icon en base64 pour l'embarquer dans les emails
 */

const fs = require('fs');
const path = require('path');

function convertImageToBase64() {
    console.log('üñºÔ∏è  === CONVERSION IMAGE POUR EMAILS ===\n');

    try {
        const iconPath = path.join(__dirname, 'assets', 'adaptive-icon.png');
        
        if (!fs.existsSync(iconPath)) {
            console.log('‚ùå Fichier non trouv√©:', iconPath);
            return null;
        }

        // Lire l'image et convertir en base64
        const imageBuffer = fs.readFileSync(iconPath);
        const base64Image = imageBuffer.toString('base64');
        const dataUri = `data:image/png;base64,${base64Image}`;

        console.log('‚úÖ Image convertie avec succ√®s !');
        console.log(`üìè Taille: ${(imageBuffer.length / 1024).toFixed(1)} KB`);
        console.log(`üîó Base64 length: ${base64Image.length} caract√®res`);
        
        // Sauvegarder le base64 dans un fichier pour r√©utilisation
        const base64Path = path.join(__dirname, 'assets', 'adaptive-icon-base64.txt');
        fs.writeFileSync(base64Path, dataUri);
        
        console.log(`üíæ Base64 sauvegard√©: ${base64Path}`);
        console.log('\nüìã Data URI g√©n√©r√©:');
        console.log(`${dataUri.substring(0, 100)}...`);

        return dataUri;

    } catch (error) {
        console.error('‚ùå Erreur lors de la conversion:', error);
        return null;
    }
}

// Test et g√©n√©ration
const base64DataUri = convertImageToBase64();

if (base64DataUri) {
    console.log('\n‚ú® Utilisez ce code dans vos templates :');
    console.log(`<img src="${base64DataUri.substring(0, 80)}..." alt="KADOC Logo" style="width: 60px; height: 60px; border-radius: 50%;">`);
    
    module.exports = {
        getKadocLogoDataUri: () => base64DataUri
    };
} else {
    console.log('\n‚ùå Conversion √©chou√©e');
    module.exports = {
        getKadocLogoDataUri: () => null
    };
}
