/**
 * üè™ SERVICE POINT RELAIS CADOK
 * Solution imm√©diate pour livraison anonyme sans partenariat La Poste
 */

const crypto = require('crypto');

class PickupPointService {
    constructor() {
        // Simulation de partenaires point relais
        this.pickupPartners = {
            'mondial_relay': {
                name: 'Mondial Relay',
                apiUrl: 'https://api.mondialrelay.fr',
                coverage: ['France', 'Belgique', 'Espagne']
            },
            'chronopost': {
                name: 'Chronopost Shop2Shop',
                apiUrl: 'https://api.chronopost.fr/shop2shop',
                coverage: ['France']
            },
            'pickup': {
                name: 'Pickup Services',
                apiUrl: 'https://api.pickup.fr',
                coverage: ['France']
            }
        };

        // Base de donn√©es simul√©e des points relais
        this.pickupPoints = new Map();
        this.initializeSamplePoints();
    }

    initializeSamplePoints() {
        // Points relais √† Paris
        this.pickupPoints.set('PARIS_75001_001', {
            id: 'PARIS_75001_001',
            partner: 'mondial_relay',
            name: 'Franprix R√©publique',
            address: {
                street: '15 Rue de Turbigo',
                city: 'Paris',
                zipCode: '75001',
                country: 'France'
            },
            openingHours: 'Lun-Sam 8h-21h, Dim 9h-20h',
            phone: '01 42 33 44 55',
            coordinates: { lat: 48.8606, lng: 2.3522 }
        });

        // Points relais √† Lyon
        this.pickupPoints.set('LYON_69001_001', {
            id: 'LYON_69001_001',
            partner: 'pickup',
            name: 'Tabac des Acacias',
            address: {
                street: '25 Rue des Acacias',
                city: 'Lyon',
                zipCode: '69001',
                country: 'France'
            },
            openingHours: 'Lun-Ven 7h-19h, Sam 8h-18h',
            phone: '04 78 28 55 66',
            coordinates: { lat: 45.7640, lng: 4.8357 }
        });
    }

    /**
     * Trouver le point relais le plus proche
     */
    findNearestPickupPoint(destinationAddress) {
        // Simulation - en r√©alit√©, utiliser une API de g√©olocalisation
        const { city, zipCode } = destinationAddress;
        
        // Logique simplifi√©e bas√©e sur le code postal
        if (zipCode.startsWith('75')) {
            return this.pickupPoints.get('PARIS_75001_001');
        } else if (zipCode.startsWith('69')) {
            return this.pickupPoints.get('LYON_69001_001');
        }
        
        // Par d√©faut, retourner un point relais g√©n√©rique
        return {
            id: `GENERIC_${zipCode}_001`,
            partner: 'mondial_relay',
            name: `Point Relais ${city}`,
            address: {
                street: 'Adresse du point relais',
                city: city,
                zipCode: zipCode,
                country: 'France'
            },
            openingHours: 'Lun-Sam 9h-19h',
            phone: '01 XX XX XX XX'
        };
    }

    /**
     * G√©n√©rer un code de retrait s√©curis√©
     */
    generateWithdrawalCode(tradeId, recipientId) {
        const timestamp = Date.now().toString(36);
        const hash = crypto.createHash('md5')
            .update(`${tradeId}-${recipientId}-${timestamp}`)
            .digest('hex')
            .substring(0, 6)
            .toUpperCase();
        
        return `CADOK-${hash}`;
    }

    /**
     * Cr√©er une livraison en point relais
     */
    async createPickupDelivery(trade) {
        try {
            console.log('üè™ CR√âATION LIVRAISON POINT RELAIS\n');
            
            // 1. Trouver le point relais le plus proche du destinataire
            const pickupPoint = this.findNearestPickupPoint(trade.receiver.address);
            console.log(`üìç Point relais s√©lectionn√© : ${pickupPoint.name}`);
            console.log(`   ${pickupPoint.address.street}, ${pickupPoint.address.zipCode} ${pickupPoint.address.city}`);
            
            // 2. G√©n√©rer le code de retrait
            const withdrawalCode = this.generateWithdrawalCode(trade._id, trade.receiver._id);
            console.log(`üîë Code de retrait g√©n√©r√© : ${withdrawalCode}`);
            
            // 3. Cr√©er l'√©tiquette d'exp√©dition
            const shippingLabel = {
                senderInfo: {
                    name: `${trade.sender.firstName} ${trade.sender.lastName}`,
                    address: trade.sender.address
                },
                destinationInfo: {
                    name: pickupPoint.name,
                    address: pickupPoint.address,
                    specialInstructions: [
                        `Code de retrait : ${withdrawalCode}`,
                        `Destinataire : ${trade.receiver.firstName} ${trade.receiver.lastName.charAt(0)}.`,
                        `Pi√®ce d'identit√© requise`,
                        `Contact CADOK : support@cadok.fr`
                    ]
                },
                packageInfo: {
                    reference: trade._id,
                    description: trade.itemSent.title,
                    weight: trade.itemSent.weight || 500,
                    dimensions: trade.itemSent.dimensions || '20x15x10'
                }
            };
            
            // 4. Enregistrer les donn√©es de livraison
            const deliveryData = {
                tradeId: trade._id,
                method: 'pickup_point',
                pickupPoint: pickupPoint,
                withdrawalCode: withdrawalCode,
                status: 'label_generated',
                createdAt: new Date(),
                shippingLabel: shippingLabel,
                trackingInfo: {
                    provider: pickupPoint.partner,
                    trackingNumber: `PP${Date.now()}`, // Num√©ro de suivi simul√©
                    status: 'label_created'
                }
            };
            
            console.log('üì¶ Donn√©es de livraison cr√©√©es avec succ√®s\n');
            
            return {
                success: true,
                deliveryData,
                instructions: this.generateUserInstructions(deliveryData)
            };
            
        } catch (error) {
            console.error('‚ùå Erreur cr√©ation livraison point relais:', error);
            return {
                success: false,
                error: error.message
            };
        }
    }
    
    /**
     * G√©n√©rer les instructions pour les utilisateurs
     */
    generateUserInstructions(deliveryData) {
        return {
            forSender: {
                title: 'üì¶ Instructions d\'exp√©dition',
                steps: [
                    '1. üñ®Ô∏è Imprimez l\'√©tiquette d\'exp√©dition g√©n√©r√©e',
                    '2. üì¶ Emballez votre objet soigneusement',
                    '3. üè∑Ô∏è Collez l\'√©tiquette sur votre colis',
                    `4. üè™ D√©posez le colis au ${deliveryData.pickupPoint.name}`,
                    `   üìç ${deliveryData.pickupPoint.address.street}`,
                    `   üïí Horaires : ${deliveryData.pickupPoint.openingHours}`,
                    '5. üì± Vous recevrez une confirmation de d√©p√¥t'
                ],
                important: [
                    '‚ö†Ô∏è Ne modifiez rien sur l\'√©tiquette',
                    'üìû En cas de probl√®me : ' + deliveryData.pickupPoint.phone
                ]
            },
            forRecipient: {
                title: 'üì¨ Instructions de retrait',
                steps: [
                    `1. üì± Vous recevrez une notification quand le colis arrivera`,
                    `2. üè™ Rendez-vous au ${deliveryData.pickupPoint.name}`,
                    `   üìç ${deliveryData.pickupPoint.address.street}`,
                    `   üïí Horaires : ${deliveryData.pickupPoint.openingHours}`,
                    `3. üîë Donnez le code : ${deliveryData.withdrawalCode}`,
                    '4. üÜî Pr√©sentez une pi√®ce d\'identit√©',
                    '5. üì¶ R√©cup√©rez votre colis'
                ],
                important: [
                    'üÜî Pi√®ce d\'identit√© obligatoire',
                    '‚è∞ Retrait possible pendant 10 jours',
                    `üìû Contact point relais : ${deliveryData.pickupPoint.phone}`
                ]
            }
        };
    }

    /**
     * Simuler la notification de retrait
     */
    async notifyPackageArrival(deliveryData) {
        const message = {
            type: 'package_arrival',
            title: 'üì¶ Votre colis CADOK est arriv√© !',
            body: `Votre colis est pr√™t √† retirer au ${deliveryData.pickupPoint.name}`,
            data: {
                withdrawalCode: deliveryData.withdrawalCode,
                pickupAddress: `${deliveryData.pickupPoint.address.street}, ${deliveryData.pickupPoint.address.city}`,
                openingHours: deliveryData.pickupPoint.openingHours,
                phone: deliveryData.pickupPoint.phone,
                expirationDate: new Date(Date.now() + 10 * 24 * 60 * 60 * 1000) // 10 jours
            }
        };
        
        console.log('üì± NOTIFICATION ENVOY√âE AU DESTINATAIRE :');
        console.log(JSON.stringify(message, null, 2));
        
        return message;
    }
}

// Test du service
async function testPickupPointService() {
    console.log('üß™ TEST DU SERVICE POINT RELAIS CADOK\n');
    
    const service = new PickupPointService();
    
    // Donn√©es de test
    const testTrade = {
        _id: 'TR-PICKUP-001',
        sender: {
            _id: 'user1',
            firstName: 'Marie',
            lastName: 'Dupont',
            address: {
                street: '25 Rue de la R√©publique',
                city: 'Paris',
                zipCode: '75001',
                country: 'France'
            }
        },
        receiver: {
            _id: 'user2',
            firstName: 'Thomas',
            lastName: 'Dorel',
            address: {
                street: '12 Rue des Acacias',
                city: 'Lyon',
                zipCode: '69001',
                country: 'France'
            }
        },
        itemSent: {
            title: 'Livre "Clean Code"',
            weight: 350,
            dimensions: '20x14x3'
        }
    };
    
    console.log('üìã DONN√âES DU TROC :');
    console.log(`   Exp√©diteur : ${testTrade.sender.firstName} (${testTrade.sender.address.city})`);
    console.log(`   Destinataire : ${testTrade.receiver.firstName} (${testTrade.receiver.address.city})`);
    console.log(`   Objet : ${testTrade.itemSent.title}\n`);
    
    // Cr√©er la livraison
    const result = await service.createPickupDelivery(testTrade);
    
    if (result.success) {
        console.log('‚úÖ LIVRAISON CR√â√âE AVEC SUCC√àS !\n');
        
        console.log('üìã INSTRUCTIONS POUR MARIE (EXP√âDITEUR) :');
        result.instructions.forSender.steps.forEach(step => console.log(`   ${step}`));
        console.log('\n   ‚ö†Ô∏è IMPORTANT :');
        result.instructions.forSender.important.forEach(item => console.log(`   ${item}`));
        
        console.log('\nüìã INSTRUCTIONS POUR THOMAS (DESTINATAIRE) :');
        result.instructions.forRecipient.steps.forEach(step => console.log(`   ${step}`));
        console.log('\n   ‚ö†Ô∏è IMPORTANT :');
        result.instructions.forRecipient.important.forEach(item => console.log(`   ${item}`));
        
        // Simuler l'arriv√©e du colis
        console.log('\nüöö SIMULATION : LE COLIS ARRIVE AU POINT RELAIS\n');
        await service.notifyPackageArrival(result.deliveryData);
        
        console.log('\nüéâ PROCESSUS TERMIN√â AVEC SUCC√àS !');
        console.log('‚úÖ Anonymat pr√©serv√© : Thomas ne conna√Æt pas l\'adresse de Marie');
        console.log('‚úÖ Livraison s√©curis√©e via point relais partenaire');
        console.log('‚úÖ Code de retrait unique et s√©curis√©');
        console.log('‚úÖ Solution op√©rationnelle imm√©diatement !');
        
    } else {
        console.log('‚ùå √âCHEC DE LA CR√âATION DE LIVRAISON');
        console.log('Erreur :', result.error);
    }
}

// Ex√©cuter le test si ce fichier est lanc√© directement
if (require.main === module) {
    testPickupPointService();
}

module.exports = PickupPointService;
