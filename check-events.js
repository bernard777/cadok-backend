/**
 * Script de v√©rification des √©v√©nements en base de donn√©es
 */

const mongoose = require('mongoose');
const Event = require('./models/Event');

async function checkEvents() {
  try {
    // Connexion √† MongoDB (base de production)
    await mongoose.connect('mongodb://localhost:27017/cadok');
    console.log('‚úÖ Connexion MongoDB √©tablie √†: cadok');

    // R√©cup√©ration des √©v√©nements
    const events = await Event.find({}).sort({ createdAt: -1 });
    console.log(`üìä Total √©v√©nements trouv√©s: ${events.length}`);

    if (events.length > 0) {
      console.log('\nüìã Liste des √©v√©nements:');
      events.forEach((event, index) => {
        console.log(`\n${index + 1}. ${event.name}`);
        console.log(`   ID: ${event._id}`);
        console.log(`   Th√®me: ${event.theme}`);
        console.log(`   Actif: ${event.isActive}`);
        console.log(`   Cr√©√© le: ${event.createdAt}`);
        console.log(`   D√©but: ${event.startDate}`);
        console.log(`   Fin: ${event.endDate}`);
      });
    } else {
      console.log('‚ùå Aucun √©v√©nement trouv√© en base de donn√©es');
    }

    await mongoose.disconnect();
    console.log('\n‚úÖ D√©connexion MongoDB');
    
  } catch (error) {
    console.error('‚ùå Erreur:', error.message);
    process.exit(1);
  }
}

checkEvents();
