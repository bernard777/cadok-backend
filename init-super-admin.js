/**
 * üõ°Ô∏è SCRIPT D'INITIALISATION SUPER ADMIN - CADOK
 * Cr√©e le premier compte super administrateur
 */

const mongoose = require('mongoose');
const bcrypt = require('bcryptjs');
require('dotenv').config();

// Import du mod√®le User
const User = require('./models/User');

const createSuperAdmin = async () => {
  try {
    // Connexion √† MongoDB
    await mongoose.connect(process.env.MONGODB_URI || 'mongodb://localhost:27017/cadok');
    console.log('üîó Connect√© √† MongoDB');

    // V√©rifier si un super admin existe d√©j√†
    const existingSuperAdmin = await User.findOne({ role: 'super_admin' });
    if (existingSuperAdmin) {
      console.log('‚ö†Ô∏è Un super admin existe d√©j√†:', existingSuperAdmin.pseudo);
      process.exit(0);
    }

    // Donn√©es du super admin
    const SUPER_ADMIN_DATA = {
      email: process.env.SUPER_ADMIN_EMAIL || 'admin@cadok.com',
      pseudo: process.env.SUPER_ADMIN_PSEUDO || 'SuperAdmin',
      password: process.env.SUPER_ADMIN_PASSWORD || 'SuperAdmin2025!',
      city: 'System'
    };

    console.log('üõ°Ô∏è Cr√©ation du super admin...');
    console.log('üìß Email:', SUPER_ADMIN_DATA.email);
    console.log('üë§ Pseudo:', SUPER_ADMIN_DATA.pseudo);

    // Hacher le mot de passe
    const hashedPassword = await bcrypt.hash(SUPER_ADMIN_DATA.password, 12);

    // Cr√©er le super admin
    const superAdmin = new User({
      email: SUPER_ADMIN_DATA.email,
      pseudo: SUPER_ADMIN_DATA.pseudo,
      password: hashedPassword,
      city: SUPER_ADMIN_DATA.city,
      role: 'super_admin',
      isAdmin: true,
      adminPermissions: {
        manageEvents: true,
        manageUsers: true,
        moderateContent: true,
        viewAnalytics: true,
        systemConfig: true
      },
      adminActivatedAt: new Date(),
      adminNotes: 'Compte super admin initial cr√©√© par script d\'initialisation'
    });

    await superAdmin.save();

    console.log('‚úÖ Super admin cr√©√© avec succ√®s !');
    console.log('üîë Identifiants de connexion :');
    console.log('   Email:', SUPER_ADMIN_DATA.email);
    console.log('   Mot de passe:', SUPER_ADMIN_DATA.password);
    console.log('');
    console.log('‚ö†Ô∏è  IMPORTANT: Changez le mot de passe apr√®s la premi√®re connexion !');
    console.log('');
    console.log('üöÄ Vous pouvez maintenant :');
    console.log('   ‚Ä¢ Vous connecter avec ces identifiants');
    console.log('   ‚Ä¢ Acc√©der au panel admin mobile');
    console.log('   ‚Ä¢ Promouvoir d\'autres utilisateurs admin');
    console.log('   ‚Ä¢ G√©rer les √©v√©nements et mod√©ration');

  } catch (error) {
    console.error('‚ùå Erreur cr√©ation super admin:', error);
  } finally {
    await mongoose.disconnect();
    console.log('üîå D√©connect√© de MongoDB');
    process.exit(0);
  }
};

// Script √† ex√©cuter directement
if (require.main === module) {
  console.log('üõ°Ô∏è INITIALISATION SUPER ADMIN - CADOK');
  console.log('=====================================');
  createSuperAdmin();
}

module.exports = createSuperAdmin;
