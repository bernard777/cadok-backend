/**
 * Test simple de l'environnement CADOK
 * V√©rifie que tout est en place pour les tests
 */

// Test des variables d'environnement
require('dotenv').config();

console.log('üîß CADOK - V√©rification de l\'environnement');
console.log('===========================================\n');

// 1. V√©rifier les variables d'environnement
console.log('1Ô∏è‚É£ Variables d\'environnement:');
const requiredEnvVars = [
  'JWT_SECRET',
  'MONGODB_URI',
  'NODE_ENV',
  'PORT'
];

let envOK = true;
requiredEnvVars.forEach(varName => {
  const value = process.env[varName];
  if (value) {
    console.log(`   ‚úÖ ${varName}: ${'*'.repeat(Math.min(value.length, 20))}`);
  } else {
    console.log(`   ‚ùå ${varName}: MANQUANT`);
    envOK = false;
  }
});

// 2. V√©rifier les d√©pendances critiques
console.log('\n2Ô∏è‚É£ D√©pendances critiques:');
const criticalDeps = ['crypto', 'jsonwebtoken', 'mongoose'];

criticalDeps.forEach(dep => {
  try {
    require(dep);
    console.log(`   ‚úÖ ${dep}: Disponible`);
  } catch (error) {
    console.log(`   ‚ùå ${dep}: MANQUANT`);
    envOK = false;
  }
});

// 3. V√©rifier les fichiers du syst√®me de protection
console.log('\n3Ô∏è‚É£ Fichiers du syst√®me de protection:');
const fs = require('fs');
const path = require('path');

const requiredFiles = [
  './services/privacyProtectionService.js',
  './services/deliveryService.js',
  './models/Delivery.js'
];

requiredFiles.forEach(filePath => {
  if (fs.existsSync(path.resolve(__dirname, filePath))) {
    console.log(`   ‚úÖ ${filePath}: Pr√©sent`);
  } else {
    console.log(`   ‚ùå ${filePath}: MANQUANT`);
    envOK = false;
  }
});

// 4. Test basique de crypto
console.log('\n4Ô∏è‚É£ Test cryptographique:');
try {
  const crypto = require('crypto');
  const testData = 'test-data-cadok';
  const hash = crypto.createHash('sha256').update(testData).digest('hex');
  console.log(`   ‚úÖ Crypto fonctionne: ${hash.substring(0, 16)}...`);
} catch (error) {
  console.log(`   ‚ùå Crypto d√©faillant: ${error.message}`);
  envOK = false;
}

// R√©sultat final
console.log('\n' + '='.repeat(50));
if (envOK) {
  console.log('‚úÖ ENVIRONNEMENT PR√äT POUR LES TESTS');
  console.log('\nüöÄ Vous pouvez maintenant lancer:');
  console.log('   node test-privacy-protection.js');
  console.log('\nüì± Pour tester avec l\'app mobile:');
  console.log('   1. D√©marrez le backend: node server.js');
  console.log('   2. D√©marrez l\'app mobile: npx expo start');
} else {
  console.log('‚ùå ENVIRONNEMENT INCOMPLET');
  console.log('\nüîß Actions requises:');
  console.log('   1. V√©rifiez le fichier .env');
  console.log('   2. Installez les d√©pendances: npm install');
  console.log('   3. Assurez-vous que tous les fichiers sont pr√©sents');
}
console.log('='.repeat(50));
