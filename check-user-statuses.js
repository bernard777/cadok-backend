/**
 * üîç V√âRIFIER LES STATUTS DES UTILISATEURS DE TEST
 */

const mongoose = require('mongoose');
const User = require('./models/User');

const checkUserStatuses = async () => {
  try {
    // Connexion √† MongoDB
    await mongoose.connect('mongodb://localhost:27017/cadok');
    console.log('‚úÖ Connexion MongoDB r√©ussie\n');

    // R√©cup√©rer tous les utilisateurs de test
    const testUsers = await User.find({ email: { $regex: '@test-cadok\.com$' } })
      .select('pseudo email status verified bannedAt bannedUntil banReason suspendedAt suspendedUntil suspendReason createdAt')
      .sort({ pseudo: 1 });

    console.log(`üìä Utilisateurs de test trouv√©s: ${testUsers.length}\n`);

    testUsers.forEach((user, index) => {
      console.log(`üë§ ${index + 1}. ${user.pseudo}`);
      console.log(`   üìß Email: ${user.email}`);
      console.log(`   üìä Statut: ${user.status || 'active'}`);
      console.log(`   ‚úÖ V√©rifi√©: ${user.verified ? 'Oui' : 'Non'}`);
      
      if (user.status === 'banned') {
        console.log(`   üö´ Banni le: ${user.bannedAt}`);
        console.log(`   üö´ Banni jusqu'au: ${user.bannedUntil || 'D√©finitif'}`);
        console.log(`   üö´ Raison: ${user.banReason || 'Non sp√©cifi√©e'}`);
      }
      
      if (user.status === 'suspended') {
        console.log(`   ‚è∏Ô∏è  Suspendu le: ${user.suspendedAt}`);
        console.log(`   ‚è∏Ô∏è  Suspendu jusqu'au: ${user.suspendedUntil || 'D√©finitif'}`);
        console.log(`   ‚è∏Ô∏è  Raison: ${user.suspendReason || 'Non sp√©cifi√©e'}`);
      }
      
      console.log('');
    });

    // Statistiques
    const statusCounts = {};
    testUsers.forEach(user => {
      const status = user.status || 'active';
      statusCounts[status] = (statusCounts[status] || 0) + 1;
    });

    console.log('üìà R√âPARTITION DES STATUTS:');
    Object.entries(statusCounts).forEach(([status, count]) => {
      console.log(`   ${status}: ${count} utilisateurs`);
    });

    // Corriger Isabelle Simon si n√©cessaire
    const isabelle = testUsers.find(u => u.pseudo === 'Isabelle_Simon');
    if (isabelle && isabelle.status !== 'suspended') {
      console.log('\nüîß CORRECTION: Mise √† jour du statut d\'Isabelle Simon...');
      
      await User.findByIdAndUpdate(isabelle._id, {
        status: 'suspended',
        suspendedAt: new Date(),
        suspendedUntil: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000), // 30 jours
        suspendReason: 'Compte temporairement suspendu pour v√©rification.',
        adminNotes: `[${new Date().toISOString()}] Statut corrig√© automatiquement`
      });
      
      console.log('‚úÖ Isabelle Simon mise √† jour avec le statut "suspended"');
    }

    await mongoose.disconnect();
    console.log('\n‚úÖ V√©rification termin√©e');
  } catch (error) {
    console.error('‚ùå Erreur:', error.message);
    process.exit(1);
  }
};

checkUserStatuses();
